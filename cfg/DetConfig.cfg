// detector configure file 

name = "detector configuration"

GEMConfig = {

	DAQinfor={
		DAQVersion="MPD_APV4.0";  //"MPD_APV3.0"
		DataStructureVersion=4.0;
		NSample=6;
		OnlinePedestalSubtraction=true;
		NumberofChannelInFrame=129;   // which is 128 channels and 1 seperation
	};
	GEMDetectorConfig={
		GEMMapFile="./database/singleModuleMap.cfg";
#		GEMMapFile="./database/gem_map_uva_eel_3crates_layer12345.cfg";
		SpacialResolution=0.0070; // in cm 
		ReadOutStripBin=0.04 ;    // in cm 
		stripMapping=[1, 33, 65, 97, 9, 41, 73, 105, 17, 49, 81, 113, 25, 57, 89, 121, 3, 35, 67, 99, 11, 43, 75, 107, 19, 51, 83, 115, 27, 59, 91, 123, 5, 37, 69, 101, 13, 45, 77, 109, 21, 53, 85, 117, 29, 61, 93, 125, 7, 39, 71, 103, 15, 47, 79, 111, 23, 55, 87, 119, 31, 63, 95, 127, 0, 32, 64, 96, 8, 40, 72, 104, 16, 48, 80, 112, 24, 56, 88, 120, 2, 34, 66, 98, 10, 42, 74, 106, 18, 50, 82, 114, 26, 58, 90, 122, 4, 36, 68, 100, 12, 44, 76, 108, 20, 52, 84, 116, 28, 60, 92, 124, 6, 38, 70, 102, 14, 46, 78, 110, 22, 54, 86, 118, 30, 62, 94, 126];
		MPD1={
			MPDID=10;
			//RotationMatrix file would have higher priority
			RotationMatrixFname="";
			RotationMatrix=(
			  1,0,0,0,
			  0,1,0,0,
			  0,0,1,0,
			  0,0,0,1
			);
		}
	};
	DataAnalysisConfig={
		PedestalSavePattern="/home/coda/outputDir/pedestalDir/Pedestal_run%d.root";
		#HitSavePattern="/home/coda/hitTest.root";
		HitSavePattern="/home/coda/outputDir/hitDir/gem_hit_%04d_%02d.root";
		ClusterSavePattern="/home/coda/outputDir/results/Cluster_run%04d_%02d.root";

		PedestalFname="xxx.root";
		ZeroSubtrCutSigma=5;
		DecodeWhenLoad=true;	// this is only used for the display mode 
		RawStripPosCorrection=true;
		PedestalMeanHistoNamePattern="PedestalMean(offset)_crate_%d_mpd_%d_ch_%d";
		PedestalRMSHistoNamePattern="PedestalRMS_crate_%_mpd_%d_ch_%d";
		MaximumCore=16;       // the maximum number of cores when doing the multithread calculation
		kMaxStrips=20000 ;    //1000*20*2*5  maximum fired strip in a event (contains all the chamber and all the channels)
	};
	
	runInfors={
	}
};
